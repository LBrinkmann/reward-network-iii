variables:
  DEPLOYMENT_VARS: "MONGO_URL, DATABASE_NAME, BACKEND_USER, BACKEND_PASSWORD"
  APP_NAME: rn-iii-backend

include:
  - project: "mpib/chm/common/deploy-pipeline"
    ref: "1.5.7"
    file: "python-app.yml"

# override the inherited stage, to set the CPU limit
deploy-prod:
  script:
    - deploy-pipeline/docker_login.sh
    - deploy-pipeline/aws_config.sh
    - deploy-pipeline/deployment_vars.pl

    - if [ -n "$HELM_DRYRUN" ]; then DRYRUN="--dry-run --debug"; else DRYRUN=""; fi

    - helm upgrade --install -n mcu $DRYRUN
      ${APP_NAME}-${CI_COMMIT_REF_NAME}
      deploy-pipeline/charts/web-service
      --set dockersecret=${DOCKERCFG}
      --set app_name="${APP_NAME}-${CI_COMMIT_REF_NAME}"
      --set app_image="${REGISTERY_URL}/${DOCKER_REGISTERY_PREFIX}/${IMAGE_NAME}:${IMAGE_TAG}"
      --set main_url=${MAIN_URL}
      --set web_port=${WEB_PORT}
      --set replica_count=${REPLICA_COUNT}
      --set sticky_session=${STICKY_SESSION}
      --set resources.limits.cpu=1
      -f /tmp/deployment_vars.yml
      --atomic

init:
  extends: .init-stage
  after_script:
    - echo "Copying files from subdirectory to root directory"
    - cp -r $CHILD_PIPELINE_EXECUTION_CONTEXT/* ./
    - rm -rf frontend
    - rm -rf backend
    - echo "DATABASE_NAME=rn-iii-pilot-5b" >>build.env
    - cat build.env
  artifacts:
    paths:
      - ./

docker:
  tags:
    - chm
  before_script:
    - whoami
    - hostname
    # - systemctl status docker
    # - docker info
